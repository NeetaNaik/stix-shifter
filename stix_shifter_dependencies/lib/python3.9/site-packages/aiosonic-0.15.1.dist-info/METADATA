Metadata-Version: 2.1
Name: aiosonic
Version: 0.15.1
Summary: Async http client
Author: Johanderson Mogollon
Author-email: johanderson@mogollon.com.ve
License: MIT
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: Implementation :: PyPy
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: chardet ==4.0.0
Requires-Dist: h2 ==4.1.0
Requires-Dist: hpack ==4.0.0
Requires-Dist: hyperframe ==6.0.1
Requires-Dist: onecache ==0.3.1
Provides-Extra: test
Requires-Dist: aiodns ==3.0.0 ; extra == 'test'
Requires-Dist: aiohttp ==3.8.1 ; extra == 'test'
Requires-Dist: aiosignal ==1.2.0 ; extra == 'test'
Requires-Dist: anyio ==3.6.1 ; extra == 'test'
Requires-Dist: asgiref ==3.4.1 ; extra == 'test'
Requires-Dist: async-timeout ==4.0.2 ; extra == 'test'
Requires-Dist: attrs ==21.4.0 ; extra == 'test'
Requires-Dist: black ==22.6.0 ; extra == 'test'
Requires-Dist: certifi ==2022.6.15 ; extra == 'test'
Requires-Dist: cffi ==1.15.1 ; extra == 'test'
Requires-Dist: charset-normalizer ==2.1.0 ; extra == 'test'
Requires-Dist: click ==8.0.4 ; extra == 'test'
Requires-Dist: coverage[toml] ==6.4.1 ; extra == 'test'
Requires-Dist: coveralls ==3.3.1 ; extra == 'test'
Requires-Dist: django ==3.2.14 ; extra == 'test'
Requires-Dist: docopt ==0.6.2 ; extra == 'test'
Requires-Dist: filelock ==3.7.1 ; extra == 'test'
Requires-Dist: frozenlist ==1.3.0 ; extra == 'test'
Requires-Dist: h11 ==0.12.0 ; extra == 'test'
Requires-Dist: httpcore ==0.15.0 ; extra == 'test'
Requires-Dist: httpx ==0.23.0 ; extra == 'test'
Requires-Dist: idna ==3.3 ; extra == 'test'
Requires-Dist: iniconfig ==1.1.1 ; extra == 'test'
Requires-Dist: multidict ==6.0.2 ; extra == 'test'
Requires-Dist: packaging ==21.3 ; extra == 'test'
Requires-Dist: pathspec ==0.9.0 ; extra == 'test'
Requires-Dist: platformdirs ==2.5.2 ; extra == 'test'
Requires-Dist: pluggy ==1.0.0 ; extra == 'test'
Requires-Dist: proxy-py ==2.4.3 ; extra == 'test'
Requires-Dist: py ==1.11.0 ; extra == 'test'
Requires-Dist: pycares ==4.2.1 ; extra == 'test'
Requires-Dist: pycparser ==2.21 ; extra == 'test'
Requires-Dist: pyparsing ==3.0.9 ; extra == 'test'
Requires-Dist: pytest ==7.1.2 ; extra == 'test'
Requires-Dist: pytest-aiohttp ==1.0.4 ; extra == 'test'
Requires-Dist: pytest-asyncio ==0.18.3 ; extra == 'test'
Requires-Dist: pytest-black ==0.3.12 ; extra == 'test'
Requires-Dist: pytest-cov ==3.0.0 ; extra == 'test'
Requires-Dist: pytest-django ==4.5.2 ; extra == 'test'
Requires-Dist: pytest-mock ==3.8.2 ; extra == 'test'
Requires-Dist: pytest-sugar ==0.9.4 ; extra == 'test'
Requires-Dist: pytest-timeout ==2.1.0 ; extra == 'test'
Requires-Dist: pytz ==2022.1 ; extra == 'test'
Requires-Dist: requests ==2.28.1 ; extra == 'test'
Requires-Dist: rfc3986[idna2008] ==1.5.0 ; extra == 'test'
Requires-Dist: sniffio ==1.2.0 ; extra == 'test'
Requires-Dist: sqlparse ==0.4.2 ; extra == 'test'
Requires-Dist: termcolor ==1.1.0 ; extra == 'test'
Requires-Dist: toml ==0.10.2 ; extra == 'test'
Requires-Dist: tomli ==2.0.1 ; extra == 'test'
Requires-Dist: typing-extensions ==4.3.0 ; extra == 'test'
Requires-Dist: urllib3 ==1.26.9 ; extra == 'test'
Requires-Dist: uvicorn ==0.18.2 ; extra == 'test'
Requires-Dist: yarl ==1.7.2 ; extra == 'test'
Requires-Dist: mypy ==0.961 ; (platform_python_implementation != "PyPy") and extra == 'test'
Requires-Dist: mypy-extensions ==0.4.3 ; (platform_python_implementation != "PyPy") and extra == 'test'
Requires-Dist: pytest-mypy ==0.9.1 ; (platform_python_implementation != "PyPy") and extra == 'test'

[![Build Status](https://travis-ci.org/sonic182/aiosonic.svg?branch=master)](https://travis-ci.org/sonic182/aiosonic)
![github status](https://github.com/sonic182/aiosonic/actions/workflows/python.yml/badge.svg)
[![Coverage Status](https://coveralls.io/repos/github/sonic182/aiosonic/badge.svg?branch=master)](https://coveralls.io/github/sonic182/aiosonic?branch=master)
[![PyPI version](https://badge.fury.io/py/aiosonic.svg)](https://badge.fury.io/py/aiosonic)
[![Documentation Status](https://readthedocs.org/projects/aiosonic/badge/?version=latest)](https://aiosonic.readthedocs.io/en/latest/?badge=latest)
[![Discord](https://img.shields.io/discord/898929656969965648)](https://discord.gg/e7tBnYSRjj)

# aiosonic - lightweight Python asyncio http client


Very fast, lightweight Python asyncio http client

Here is some [documentation](https://aiosonic.readthedocs.io/en/latest/).

There is a performance script in tests folder which shows very nice numbers

```
Â» python tests/performance.py
doing tests...
{
 "aiosonic": "1000 requests in 182.03 ms",
 "aiosonic cyclic": "1000 requests in 370.55 ms",
 "aiohttp": "1000 requests in 367.66 ms",
 "requests": "1000 requests in 4613.77 ms",
 "httpx": "1000 requests in 812.41 ms"
}
aiosonic is 101.97% faster than aiohttp
aiosonic is 2434.55% faster than requests
aiosonic is 103.56% faster than aiosonic cyclic
aiosonic is 346.29% faster than httpx
```

This is a *very basic, dummy test*, machine dependant. If you look for performance, test and compare your code with this and other packages like aiohttp.

You can perform this test by installing all test dependencies with `pip install -e ".[test]"` and doing `python tests/performance.py` in your own machine

# Requirements:

* Python>=3.7
* PyPy>=3.7


# Features:

* Keepalive and smart pool of connections
* Multipart File Uploads
* Chunked responses handling
* Chunked requests
* Connection Timeouts
* Automatic Decompression
* Follow Redirects
* Fully type annotated.
* 100% test coverage (Sometimes not).
* HTTP2 (BETA) when using the correct flag

# Installation

`pip install aiosonic`

# Usage

```python
import asyncio
import aiosonic
import json


async def run():
    client = aiosonic.HTTPClient()

    # ##################
    # Sample get request
    # ##################
    response = await client.get('https://www.google.com/')
    assert response.status_code == 200
    assert 'Google' in (await response.text())

    # ##################
    # Post data as multipart form
    # ##################
    url = "https://postman-echo.com/post"
    posted_data = {'foo': 'bar'}
    response = await client.post(url, data=posted_data)

    assert response.status_code == 200
    data = json.loads(await response.content())
    assert data['form'] == posted_data

    # ##################
    # Posted as json
    # ##################
    response = await client.post(url, json=posted_data)

    assert response.status_code == 200
    data = json.loads(await response.content())
    assert data['json'] == posted_data

    # ##################
    # Sample request + timeout
    # ##################
    from aiosonic.timeout import Timeouts
    timeouts = Timeouts(
        sock_read=10,
        sock_connect=3
    )
    response = await client.get('https://www.google.com/', timeouts=timeouts)
    assert response.status_code == 200
    assert 'Google' in (await response.text())
    await client.shutdown()

    print('success')


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(run())
```

# [TODO'S](https://github.com/sonic182/aiosonic/projects/1)

* HTTP2
  * [x] Get
  * [x] Request with data sending
  * [ ] Do a aiosonic release with stable http2
* Better documentation
* International Domains and URLs (idna + cache)
* Basic/Digest Authentication
* [x] Requests using a http proxy
* [x] Sessions with Cookie Persistence
* [x] Elegant Key/Value Cookies

# Development

Install packages with pip-tools:
```bash
pip install pip-tools
pip-compile
pip-compile test-requirements.in
pip-sync requirements.txt test-requirements.txt
```

# Contribute

1. Fork
2. create a branch `feature/your_feature`
3. commit - push - pull request

Thanks :)

# Contributors

<a href="https://github.com/sonic182/aiosonic/graphs/contributors">
 <img src="https://contributors-img.web.app/image?repo=sonic182/aiosonic" />
</a>
